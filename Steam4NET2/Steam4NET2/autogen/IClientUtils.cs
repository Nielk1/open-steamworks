// This file is automatically generated.
using System;
using System.Text;
using System.Runtime.InteropServices;

namespace Steam4NET
{

	[StructLayout(LayoutKind.Sequential,Pack=4)]
	public class IClientUtilsVTable
	{
		public IntPtr GetInstallPath0;
		public IntPtr GetUserBaseFolderInstallImage1;
		public IntPtr GetManagedContentRoot2;
		public IntPtr GetSecondsSinceAppActive3;
		public IntPtr GetSecondsSinceComputerActive4;
		public IntPtr SetComputerActive5;
		public IntPtr GetConnectedUniverse6;
		public IntPtr GetServerRealTime7;
		public IntPtr GetIPCountry8;
		public IntPtr GetImageSize9;
		public IntPtr GetImageRGBA10;
		public IntPtr GetCSERIPPort11;
		public IntPtr GetNumRunningApps12;
		public IntPtr GetCurrentBatteryPower13;
		public IntPtr SetOfflineMode14;
		public IntPtr GetOfflineMode15;
		public IntPtr SetAppIDForCurrentPipe16;
		public IntPtr GetAppID17;
		public IntPtr SetAPIDebuggingActive18;
		public IntPtr AllocPendingAPICallHandle19;
		public IntPtr IsAPICallCompleted20;
		public IntPtr GetAPICallFailureReason21;
		public IntPtr GetAPICallResult22;
		public IntPtr PostInProcAPICallResult23;
		public IntPtr SignalAppsToShutDown24;
		public IntPtr SignalServiceAppsToDisconnect25;
		public IntPtr TerminateAllAppsMultiStep26;
		public IntPtr GetCellID27;
		public IntPtr BIsGlobalInstance28;
		public IntPtr CheckFileSignature29;
		public IntPtr GetBuildID30;
		public IntPtr SetCurrentUIMode31;
		public IntPtr GetCurrentUIMode32;
		public IntPtr SetLauncherType33;
		public IntPtr GetLauncherType34;
		public IntPtr ShowGamepadTextInput35;
		public IntPtr GetEnteredGamepadTextLength36;
		public IntPtr GetEnteredGamepadTextInput37;
		public IntPtr GamepadTextInputClosed38;
		public IntPtr SetSpew39;
		public IntPtr BDownloadsDisabled40;
		public IntPtr SetFocusedWindow41;
		public IntPtr GetSteamUILanguage42;
		public IntPtr CheckSteamReachable43;
		public IntPtr SetLastGameLaunchMethod44;
		public IntPtr SetVideoAdapterInfo45;
		public IntPtr SetControllerOverrideMode46;
		public IntPtr SetOverlayWindowFocusForPipe47;
		public IntPtr GetGameOverlayUIInstanceFocusGameID48;
		public IntPtr SetControllerConfigFileForAppID49;
		public IntPtr GetControllerConfigFileForAppID50;
		public IntPtr IsSteamRunningInVR51;
		public IntPtr BIsRunningOnAlienwareAlpha52;
		public IntPtr StartVRDashboard53;
		public IntPtr IsVRHeadsetStreamingEnabled54;
		public IntPtr SetVRHeadsetStreamingEnabled55;
		public IntPtr GenerateSupportSystemReport56;
		public IntPtr GetSupportSystemReport57;
		public IntPtr GetAppIdForPid58;
		public IntPtr SetClientUIProcess59;
		public IntPtr BIsClientUIInForeground60;
		private IntPtr DTorIClientUtils61;
	};
	
	[InteropHelp.InterfaceVersion("CLIENTUTILS_INTERFACE_VERSION001")]
	public class IClientUtils : InteropHelp.NativeWrapper<IClientUtilsVTable>
	{
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetInstallPath( IntPtr thisptr );
		public string GetInstallPath(  ) 
		{
			return InteropHelp.Utf8PtrToString( this.GetFunction<NativeGetInstallPath>( this.Functions.GetInstallPath0 )( this.ObjectAddress ) ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetUserBaseFolderInstallImage( IntPtr thisptr );
		public string GetUserBaseFolderInstallImage(  ) 
		{
			return InteropHelp.Utf8PtrToString( this.GetFunction<NativeGetUserBaseFolderInstallImage>( this.Functions.GetUserBaseFolderInstallImage1 )( this.ObjectAddress ) ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetManagedContentRoot( IntPtr thisptr );
		public string GetManagedContentRoot(  ) 
		{
			return InteropHelp.Utf8PtrToString( this.GetFunction<NativeGetManagedContentRoot>( this.Functions.GetManagedContentRoot2 )( this.ObjectAddress ) ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceAppActive( IntPtr thisptr );
		public UInt32 GetSecondsSinceAppActive(  ) 
		{
			return this.GetFunction<NativeGetSecondsSinceAppActive>( this.Functions.GetSecondsSinceAppActive3 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetSecondsSinceComputerActive( IntPtr thisptr );
		public UInt32 GetSecondsSinceComputerActive(  ) 
		{
			return this.GetFunction<NativeGetSecondsSinceComputerActive>( this.Functions.GetSecondsSinceComputerActive4 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetComputerActive( IntPtr thisptr );
		public void SetComputerActive(  ) 
		{
			this.GetFunction<NativeSetComputerActive>( this.Functions.SetComputerActive5 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUniverse NativeGetConnectedUniverse( IntPtr thisptr );
		public EUniverse GetConnectedUniverse(  ) 
		{
			return this.GetFunction<NativeGetConnectedUniverse>( this.Functions.GetConnectedUniverse6 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetServerRealTime( IntPtr thisptr );
		public UInt32 GetServerRealTime(  ) 
		{
			return this.GetFunction<NativeGetServerRealTime>( this.Functions.GetServerRealTime7 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetIPCountry( IntPtr thisptr );
		public string GetIPCountry(  ) 
		{
			return InteropHelp.Utf8PtrToString( this.GetFunction<NativeGetIPCountry>( this.Functions.GetIPCountry8 )( this.ObjectAddress ) ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageSizeIUU( IntPtr thisptr, Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight );
		public bool GetImageSize( Int32 iImage, ref UInt32 pnWidth, ref UInt32 pnHeight ) 
		{
			return this.GetFunction<NativeGetImageSizeIUU>( this.Functions.GetImageSize9 )( this.ObjectAddress, iImage, ref pnWidth, ref pnHeight ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetImageRGBAIBI( IntPtr thisptr, Int32 iImage, Byte[] pubDest, Int32 nDestBufferSize );
		public bool GetImageRGBA( Int32 iImage, Byte[] pubDest, Int32 nDestBufferSize ) 
		{
			return this.GetFunction<NativeGetImageRGBAIBI>( this.Functions.GetImageRGBA10 )( this.ObjectAddress, iImage, pubDest, nDestBufferSize ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetCSERIPPortUU( IntPtr thisptr, ref UInt32 unIP, ref UInt16 usPort );
		public bool GetCSERIPPort( ref UInt32 unIP, ref UInt16 usPort ) 
		{
			return this.GetFunction<NativeGetCSERIPPortUU>( this.Functions.GetCSERIPPort11 )( this.ObjectAddress, ref unIP, ref usPort ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetNumRunningApps( IntPtr thisptr );
		public UInt32 GetNumRunningApps(  ) 
		{
			return this.GetFunction<NativeGetNumRunningApps>( this.Functions.GetNumRunningApps12 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Byte NativeGetCurrentBatteryPower( IntPtr thisptr );
		public Byte GetCurrentBatteryPower(  ) 
		{
			return this.GetFunction<NativeGetCurrentBatteryPower>( this.Functions.GetCurrentBatteryPower13 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOfflineModeB( IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bOffline );
		public void SetOfflineMode( bool bOffline ) 
		{
			this.GetFunction<NativeSetOfflineModeB>( this.Functions.SetOfflineMode14 )( this.ObjectAddress, bOffline ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetOfflineMode( IntPtr thisptr );
		public bool GetOfflineMode(  ) 
		{
			return this.GetFunction<NativeGetOfflineMode>( this.Functions.GetOfflineMode15 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeSetAppIDForCurrentPipeUB( IntPtr thisptr, UInt32 nAppID, [MarshalAs(UnmanagedType.I1)] bool bTrackProcess );
		public UInt32 SetAppIDForCurrentPipe( UInt32 nAppID, bool bTrackProcess ) 
		{
			return this.GetFunction<NativeSetAppIDForCurrentPipeUB>( this.Functions.SetAppIDForCurrentPipe16 )( this.ObjectAddress, nAppID, bTrackProcess ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetAppID( IntPtr thisptr );
		public UInt32 GetAppID(  ) 
		{
			return this.GetFunction<NativeGetAppID>( this.Functions.GetAppID17 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetAPIDebuggingActiveBB( IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool bActive, [MarshalAs(UnmanagedType.I1)] bool bVerbose );
		public void SetAPIDebuggingActive( bool bActive, bool bVerbose ) 
		{
			this.GetFunction<NativeSetAPIDebuggingActiveBB>( this.Functions.SetAPIDebuggingActive18 )( this.ObjectAddress, bActive, bVerbose ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeAllocPendingAPICallHandle( IntPtr thisptr );
		public Int32 AllocPendingAPICallHandle(  ) 
		{
			return this.GetFunction<NativeAllocPendingAPICallHandle>( this.Functions.AllocPendingAPICallHandle19 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsAPICallCompletedUB( IntPtr thisptr, UInt64 hSteamAPICall, ref bool pbFailed );
		public bool IsAPICallCompleted( UInt64 hSteamAPICall, ref bool pbFailed ) 
		{
			return this.GetFunction<NativeIsAPICallCompletedUB>( this.Functions.IsAPICallCompleted20 )( this.ObjectAddress, hSteamAPICall, ref pbFailed ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ESteamAPICallFailure NativeGetAPICallFailureReasonU( IntPtr thisptr, UInt64 hSteamAPICall );
		public ESteamAPICallFailure GetAPICallFailureReason( UInt64 hSteamAPICall ) 
		{
			return this.GetFunction<NativeGetAPICallFailureReasonU>( this.Functions.GetAPICallFailureReason21 )( this.ObjectAddress, hSteamAPICall ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetAPICallResultUBIIB( IntPtr thisptr, UInt64 hSteamAPICall, Byte[] pCallback, Int32 cubCallback, Int32 iCallbackExpected, ref bool pbFailed );
		public bool GetAPICallResult( UInt64 hSteamAPICall, Byte[] pCallback, Int32 iCallbackExpected, ref bool pbFailed ) 
		{
			return this.GetFunction<NativeGetAPICallResultUBIIB>( this.Functions.GetAPICallResult22 )( this.ObjectAddress, hSteamAPICall, pCallback, (Int32) pCallback.Length, iCallbackExpected, ref pbFailed ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativePostInProcAPICallResultUBII( IntPtr thisptr, UInt64 arg0, Byte[] arg1, Int32 arg2, Int32 arg3 );
		public void PostInProcAPICallResult( UInt64 arg0, Byte[] arg1, Int32 arg2, Int32 arg3 ) 
		{
			this.GetFunction<NativePostInProcAPICallResultUBII>( this.Functions.PostInProcAPICallResult23 )( this.ObjectAddress, arg0, arg1, arg2, arg3 ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSignalAppsToShutDown( IntPtr thisptr );
		public bool SignalAppsToShutDown(  ) 
		{
			return this.GetFunction<NativeSignalAppsToShutDown>( this.Functions.SignalAppsToShutDown24 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSignalServiceAppsToDisconnect( IntPtr thisptr );
		public bool SignalServiceAppsToDisconnect(  ) 
		{
			return this.GetFunction<NativeSignalServiceAppsToDisconnect>( this.Functions.SignalServiceAppsToDisconnect25 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeTerminateAllAppsMultiStepU( IntPtr thisptr, UInt32 uUnk );
		public bool TerminateAllAppsMultiStep( UInt32 uUnk ) 
		{
			return this.GetFunction<NativeTerminateAllAppsMultiStepU>( this.Functions.TerminateAllAppsMultiStep26 )( this.ObjectAddress, uUnk ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetCellID( IntPtr thisptr );
		public UInt32 GetCellID(  ) 
		{
			return this.GetFunction<NativeGetCellID>( this.Functions.GetCellID27 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBIsGlobalInstance( IntPtr thisptr );
		public bool BIsGlobalInstance(  ) 
		{
			return this.GetFunction<NativeBIsGlobalInstance>( this.Functions.BIsGlobalInstance28 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCheckFileSignatureS( IntPtr thisptr, IntPtr szFileName );
		public UInt64 CheckFileSignature( string szFileName ) 
		{
			return this.GetFunction<NativeCheckFileSignatureS>( this.Functions.CheckFileSignature29 )( this.ObjectAddress, InteropHelp.Utf8StringToPtr( szFileName ).GetMarshaledBytes() ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeGetBuildID( IntPtr thisptr );
		public UInt64 GetBuildID(  ) 
		{
			return this.GetFunction<NativeGetBuildID>( this.Functions.GetBuildID30 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetCurrentUIModeE( IntPtr thisptr, EUIMode eUIMode );
		public void SetCurrentUIMode( EUIMode eUIMode ) 
		{
			this.GetFunction<NativeSetCurrentUIModeE>( this.Functions.SetCurrentUIMode31 )( this.ObjectAddress, eUIMode ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate EUIMode NativeGetCurrentUIMode( IntPtr thisptr );
		public EUIMode GetCurrentUIMode(  ) 
		{
			return this.GetFunction<NativeGetCurrentUIMode>( this.Functions.GetCurrentUIMode32 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLauncherTypeE( IntPtr thisptr, ELauncherType eLauncherType );
		public void SetLauncherType( ELauncherType eLauncherType ) 
		{
			this.GetFunction<NativeSetLauncherTypeE>( this.Functions.SetLauncherType33 )( this.ObjectAddress, eLauncherType ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate ELauncherType NativeGetLauncherType( IntPtr thisptr );
		public ELauncherType GetLauncherType(  ) 
		{
			return this.GetFunction<NativeGetLauncherType>( this.Functions.GetLauncherType34 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeShowGamepadTextInputEESUS( IntPtr thisptr, EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eInputLineMode, IntPtr szText, UInt32 uMaxLength, IntPtr szUnk );
		public bool ShowGamepadTextInput( EGamepadTextInputMode eInputMode, EGamepadTextInputLineMode eInputLineMode, string szText, UInt32 uMaxLength, string szUnk ) 
		{
			return this.GetFunction<NativeShowGamepadTextInputEESUS>( this.Functions.ShowGamepadTextInput35 )( this.ObjectAddress, eInputMode, eInputLineMode, InteropHelp.Utf8StringToPtr( szText ).GetMarshaledBytes(), uMaxLength, InteropHelp.Utf8StringToPtr( szUnk ).GetMarshaledBytes() ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt32 NativeGetEnteredGamepadTextLength( IntPtr thisptr );
		public UInt32 GetEnteredGamepadTextLength(  ) 
		{
			return this.GetFunction<NativeGetEnteredGamepadTextLength>( this.Functions.GetEnteredGamepadTextLength36 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetEnteredGamepadTextInputSU( IntPtr thisptr, StringBuilder pchValue, UInt32 cchValueMax );
		public bool GetEnteredGamepadTextInput( StringBuilder pchValue ) 
		{
			return this.GetFunction<NativeGetEnteredGamepadTextInputSU>( this.Functions.GetEnteredGamepadTextInput37 )( this.ObjectAddress, pchValue, (UInt32) pchValue.Capacity ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGamepadTextInputClosedIBS( IntPtr thisptr, Int32 hSteamPipe, [MarshalAs(UnmanagedType.I1)] bool arg1, IntPtr arg2 );
		public void GamepadTextInputClosed( Int32 hSteamPipe, bool arg1, string arg2 ) 
		{
			this.GetFunction<NativeGamepadTextInputClosedIBS>( this.Functions.GamepadTextInputClosed38 )( this.ObjectAddress, hSteamPipe, arg1, InteropHelp.Utf8StringToPtr( arg2 ).GetMarshaledBytes() ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetSpewEII( IntPtr thisptr, ESpewGroup eSpewGroup, Int32 iSpewLevel, Int32 iLogLevel );
		public void SetSpew( ESpewGroup eSpewGroup, Int32 iSpewLevel, Int32 iLogLevel ) 
		{
			this.GetFunction<NativeSetSpewEII>( this.Functions.SetSpew39 )( this.ObjectAddress, eSpewGroup, iSpewLevel, iLogLevel ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBDownloadsDisabled( IntPtr thisptr );
		public bool BDownloadsDisabled(  ) 
		{
			return this.GetFunction<NativeBDownloadsDisabled>( this.Functions.BDownloadsDisabled40 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetFocusedWindowECU( IntPtr thisptr, EWindowType eWindowType, UInt64 gameID, UInt64 ulUnk );
		public void SetFocusedWindow( EWindowType eWindowType, CGameID gameID, UInt64 ulUnk ) 
		{
			this.GetFunction<NativeSetFocusedWindowECU>( this.Functions.SetFocusedWindow41 )( this.ObjectAddress, eWindowType, gameID.ConvertToUint64(), ulUnk ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate IntPtr NativeGetSteamUILanguage( IntPtr thisptr );
		public string GetSteamUILanguage(  ) 
		{
			return InteropHelp.Utf8PtrToString( this.GetFunction<NativeGetSteamUILanguage>( this.Functions.GetSteamUILanguage42 )( this.ObjectAddress ) ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate UInt64 NativeCheckSteamReachable( IntPtr thisptr );
		public UInt64 CheckSteamReachable(  ) 
		{
			return this.GetFunction<NativeCheckSteamReachable>( this.Functions.CheckSteamReachable43 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetLastGameLaunchMethodE( IntPtr thisptr, EGameLaunchMethod eGameLaunchMethod );
		public void SetLastGameLaunchMethod( EGameLaunchMethod eGameLaunchMethod ) 
		{
			this.GetFunction<NativeSetLastGameLaunchMethodE>( this.Functions.SetLastGameLaunchMethod44 )( this.ObjectAddress, eGameLaunchMethod ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetVideoAdapterInfoIIIII( IntPtr thisptr, Int32 arg0, Int32 arg1, Int32 arg2, Int32 arg3, Int32 arg4 );
		public void SetVideoAdapterInfo( Int32 arg0, Int32 arg1, Int32 arg2, Int32 arg3, Int32 arg4 ) 
		{
			this.GetFunction<NativeSetVideoAdapterInfoIIIII>( this.Functions.SetVideoAdapterInfo45 )( this.ObjectAddress, arg0, arg1, arg2, arg3, arg4 ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetControllerOverrideModeCS( IntPtr thisptr, UInt64 gameID, IntPtr szUnk );
		public void SetControllerOverrideMode( CGameID gameID, string szUnk ) 
		{
			this.GetFunction<NativeSetControllerOverrideModeCS>( this.Functions.SetControllerOverrideMode46 )( this.ObjectAddress, gameID.ConvertToUint64(), InteropHelp.Utf8StringToPtr( szUnk ).GetMarshaledBytes() ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeSetOverlayWindowFocusForPipeBBC( IntPtr thisptr, [MarshalAs(UnmanagedType.I1)] bool arg0, [MarshalAs(UnmanagedType.I1)] bool arg1, UInt64 gameID );
		public void SetOverlayWindowFocusForPipe( bool arg0, bool arg1, CGameID gameID ) 
		{
			this.GetFunction<NativeSetOverlayWindowFocusForPipeBBC>( this.Functions.SetOverlayWindowFocusForPipe47 )( this.ObjectAddress, arg0, arg1, gameID.ConvertToUint64() ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeGetGameOverlayUIInstanceFocusGameIDB( IntPtr thisptr, ref UInt64 retarg, ref bool pbUnk );
		public CGameID GetGameOverlayUIInstanceFocusGameID( ref bool pbUnk ) 
		{
			UInt64 ret = 0; this.GetFunction<NativeGetGameOverlayUIInstanceFocusGameIDB>( this.Functions.GetGameOverlayUIInstanceFocusGameID48 )( this.ObjectAddress, ref ret, ref pbUnk ); return new CGameID(ret);
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeSetControllerConfigFileForAppIDUS( IntPtr thisptr, UInt32 unAppID, IntPtr pszControllerConfigFile );
		public bool SetControllerConfigFileForAppID( UInt32 unAppID, string pszControllerConfigFile ) 
		{
			return this.GetFunction<NativeSetControllerConfigFileForAppIDUS>( this.Functions.SetControllerConfigFileForAppID49 )( this.ObjectAddress, unAppID, InteropHelp.Utf8StringToPtr( pszControllerConfigFile ).GetMarshaledBytes() ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeGetControllerConfigFileForAppIDUSU( IntPtr thisptr, UInt32 unAppID, IntPtr pszControllerConfigFile, UInt32 cubControllerConfigFile );
		public bool GetControllerConfigFileForAppID( UInt32 unAppID, string pszControllerConfigFile, UInt32 cubControllerConfigFile ) 
		{
			return this.GetFunction<NativeGetControllerConfigFileForAppIDUSU>( this.Functions.GetControllerConfigFileForAppID50 )( this.ObjectAddress, unAppID, InteropHelp.Utf8StringToPtr( pszControllerConfigFile ).GetMarshaledBytes(), cubControllerConfigFile ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeIsSteamRunningInVR( IntPtr thisptr );
		public bool IsSteamRunningInVR(  ) 
		{
			return this.GetFunction<NativeIsSteamRunningInVR>( this.Functions.IsSteamRunningInVR51 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBIsRunningOnAlienwareAlpha( IntPtr thisptr );
		public bool BIsRunningOnAlienwareAlpha(  ) 
		{
			return this.GetFunction<NativeBIsRunningOnAlienwareAlpha>( this.Functions.BIsRunningOnAlienwareAlpha52 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate void NativeStartVRDashboard( IntPtr thisptr );
		public void StartVRDashboard(  ) 
		{
			this.GetFunction<NativeStartVRDashboard>( this.Functions.StartVRDashboard53 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeIsVRHeadsetStreamingEnabledU( IntPtr thisptr, UInt32 unk );
		public Int32 IsVRHeadsetStreamingEnabled( UInt32 unk ) 
		{
			return this.GetFunction<NativeIsVRHeadsetStreamingEnabledU>( this.Functions.IsVRHeadsetStreamingEnabled54 )( this.ObjectAddress, unk ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetVRHeadsetStreamingEnabledUB( IntPtr thisptr, UInt32 unk, [MarshalAs(UnmanagedType.I1)] bool arg1 );
		public Int32 SetVRHeadsetStreamingEnabled( UInt32 unk, bool arg1 ) 
		{
			return this.GetFunction<NativeSetVRHeadsetStreamingEnabledUB>( this.Functions.SetVRHeadsetStreamingEnabled55 )( this.ObjectAddress, unk, arg1 ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGenerateSupportSystemReport( IntPtr thisptr );
		public Int32 GenerateSupportSystemReport(  ) 
		{
			return this.GetFunction<NativeGenerateSupportSystemReport>( this.Functions.GenerateSupportSystemReport56 )( this.ObjectAddress ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetSupportSystemReportSUBU( IntPtr thisptr, StringBuilder arg0, UInt32 unk, Byte[] unk_2, UInt32 unk_3 );
		public Int32 GetSupportSystemReport( StringBuilder arg0, Byte[] unk_2 ) 
		{
			return this.GetFunction<NativeGetSupportSystemReportSUBU>( this.Functions.GetSupportSystemReport57 )( this.ObjectAddress, arg0, (UInt32) arg0.Capacity, unk_2, (UInt32) unk_2.Length ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeGetAppIdForPidU( IntPtr thisptr, UInt32 unk );
		public Int32 GetAppIdForPid( UInt32 unk ) 
		{
			return this.GetFunction<NativeGetAppIdForPidU>( this.Functions.GetAppIdForPid58 )( this.ObjectAddress, unk ); 
		}
		
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate Int32 NativeSetClientUIProcess( IntPtr thisptr );
		public Int32 SetClientUIProcess(  ) 
		{
			return this.GetFunction<NativeSetClientUIProcess>( this.Functions.SetClientUIProcess59 )( this.ObjectAddress ); 
		}
		
		[return: MarshalAs(UnmanagedType.I1)]
		[UnmanagedFunctionPointer(CallingConvention.ThisCall)] private delegate bool NativeBIsClientUIInForeground( IntPtr thisptr );
		public bool BIsClientUIInForeground(  ) 
		{
			return this.GetFunction<NativeBIsClientUIInForeground>( this.Functions.BIsClientUIInForeground60 )( this.ObjectAddress ); 
		}
		
	};
}
